from aiogram import types, Dispatcher, Bot
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher.filters import Text
from keybord_markup.keyboard import kb_admin_action, kb_back_admin
from config.config import TOKEN, admin_bot
from data.data_admin import sql_admin_delete_day

bot = Bot(token=TOKEN)

class DayDelete(StatesGroup):
    
    day_del = State()


async def delete_day(message: types.Message, state: FSMContext):
    
    if message.chat.id not in admin_bot:
        await message.answer("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
        await state.finish()
        
        return
    
    await DayDelete.day_del.set()
    await message.answer("–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –¥–Ω—è –Ω–∞–ø–∏—à–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n–¥–µ–Ω—å.–º–µ—Å—è—Ü\n–ü—Ä–∏–º–µ—Ä—ã: 1.1, 20.5, 4.10, 12.12", reply_markup= kb_back_admin)
    
    
async def day(message: types.Message, state: FSMContext):
    
    async with state.proxy() as data:
        
        if message.text == "‚¨áÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–∞–Ω–µ–ª–∏ ‚¨áÔ∏è":
            await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ...", reply_markup= kb_admin_action)
            await state.finish()

            return
        
        data['day_del'] = message.text
        
        day_and_month = data['day_del'].split(".")
        day = day_and_month[0]
        month = day_and_month[1]
        
        if await sql_admin_delete_day(day, month):
            await message.answer("–ì–æ—Ç–æ–≤–æ", reply_markup= kb_admin_action)
            await state.finish()

            return
        
        else:
            await message.answer("–≠—Ç–æ—Ç –¥–µ–Ω—å –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω", reply_markup= kb_admin_action)
            await state.finish()
            
            return

def start_delete_day(dp: Dispatcher):
    
    dp.register_message_handler(delete_day, Text(equals="–£–±—Ä–∞—Ç—å –¥–µ–Ω—å üóì"), state=None)
    dp.register_message_handler(day, state=DayDelete.day_del)